import pandas as pd
import networkx as nx
import matplotlib.pyplot as plt
import numpy as np
import math


# 1. 读取连边数据
edges = pd.read_excel(r'C:/Users/Administrator/Desktop/pythonProject3/专家打分连边结果.xlsx')
source_col = 'Source'  # 如果列名不同，请修改
target_col = 'Target'

# 2. 构建无向图并添加边
G = nx.Graph()
for _, row in edges.iterrows():
    G.add_edge(row[source_col], row[target_col])

# 3. 添加孤立节点（确保所有社区节点都在图中）
# 示例社区划分结果（将你原始的数据转成这种形式）
community_dict = {
    0: [1, 3, 5, 6, 7, 9, 10, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 31, 32, 34, 35, 38, 39, 41, 45, 46, 48, 50, 53,
        55, 61, 64, 68, 70, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 89, 90, 92, 93, 94, 102, 103, 104, 106,
        108, 114, 117, 118, 119, 120, 122, 123, 125, 131, 132, 135, 137, 140, 141, 147, 151, 152, 153, 154, 156, 157,
        158, 159, 160, 161, 162, 163, 170, 172, 173, 176, 181, 183, 185, 190, 191, 193, 195, 197, 198, 199, 200, 201,
        206, 208, 210, 212, 219, 220, 222, 223, 226, 230, 231, 232, 233, 234, 235, 240, 244, 249, 250, 251, 254, 255,
        257, 263, 266, 267, 271, 273, 277, 279, 280, 286, 289, 291, 294, 295, 297, 301, 307, 311, 314, 315, 316, 317,
        318, 321, 322, 323, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 340, 341, 343, 345, 346, 347,
        350, 353, 355, 357, 358, 359, 361, 362, 363, 364, 367, 369, 371, 373, 374, 375, 376, 380, 381, 383, 384, 385,
        386, 388, 391, 395, 396, 399, 401, 402, 403, 404, 409, 411, 414, 418, 419, 420, 423, 427, 428, 431, 435, 436,
        437, 444, 447, 449, 451, 453, 456, 457, 459, 460, 461, 462, 464, 465, 466, 469, 471, 472, 474, 475, 476, 478,
        480, 482, 484, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 499, 502, 503, 506, 507, 509, 511, 513, 515,
        516, 517, 518, 520, 521, 524, 525, 526, 529, 530, 533, 534, 535, 538, 540, 542, 545, 546, 549, 556, 558, 559,
        561, 565, 566, 567, 568, 569, 570, 572, 574, 575, 576, 579, 581, 582, 584, 586, 587, 588, 590, 591, 596, 597,
        598, 599, 601, 603, 604, 607, 609, 610, 613, 615, 621, 623, 625, 626, 627, 631, 632, 633, 634, 639, 640, 641,
        642, 643, 650, 651, 652, 653, 654, 655, 659, 660, 663, 664, 666, 667, 670, 671, 674, 678, 680, 683, 687, 689,
        690, 691, 693, 694, 695, 697, 698, 701, 702, 707, 708, 710, 713, 717, 718, 721, 722, 723, 725, 727, 729, 730,
        732, 733, 739, 741, 744, 745, 747, 748, 750, 751, 752, 755, 756, 762, 763, 764, 766, 769, 770, 773, 775, 776,
        777, 778, 780, 782, 783, 785, 787, 789, 791, 794, 799, 801, 804, 805, 809, 811, 812, 816, 818, 820, 825, 827,
        831, 837, 839, 840, 841, 843, 849, 850, 851, 853, 860, 861, 863, 865, 866, 868, 870, 872, 874, 880, 883, 886,
        892, 896, 897, 898, 899, 901, 902, 903, 904, 905, 906, 907, 908, 909, 913, 914, 915, 916, 919, 923, 926, 930,
        932, 933, 941, 942, 943, 944, 946, 949, 950, 951, 956, 959, 960, 961, 963, 965, 970, 975, 979, 980, 982, 984,
        985, 987, 988, 989, 991, 994, 1002, 1006, 1007, 1009, 1010, 1011, 1012, 1015, 1018, 1019, 1020, 1021, 1022,
        1023, 1030, 1032, 1037, 1039, 1041, 1042, 1045, 1048, 1049, 1051, 1053, 1055, 1056, 1057, 1060, 1061, 1062,
        1064, 1067, 1068, 1074, 1075, 1077, 1081, 1082, 1083, 1085, 1087, 1093, 1102, 1106, 1107, 1110, 1111, 1112,
        1114, 1115, 1119, 1120, 1122, 1127, 1129, 1130, 1131, 1132, 1134, 1136, 1138, 1139, 1142, 1143, 1145, 1147,
        1148, 1149, 1152, 1153, 1155, 1159, 1160, 1162, 1163, 1165, 1167, 1168, 1171, 1176, 1177, 1180, 1187, 1192,
        1193, 1194, 1196, 1198, 1203, 1205, 1206, 1207, 1210, 1211, 1212, 1213, 1214, 1216, 1219, 1223, 1227, 1231,
        1233, 1238, 1240, 1241, 1243, 1246, 1249, 1250, 1251, 1252, 1260, 1264, 1267, 1268, 1269, 1272, 1273, 1275,
        1276, 1278, 1280, 1281, 1282, 1283, 1284, 1285, 1287, 1290, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299,
        1300, 1302, 1309, 1311, 1313, 1316, 1317, 1318, 1319, 1320, 1322, 1324, 1326, 1327, 1328, 1329, 1330, 1331,
        1333, 1335, 1338, 1339, 1340, 1343, 1345, 1347, 1351, 1356, 1358, 1361, 1362, 1363, 1364, 12, 165, 467, 646,
        668, 1121, 1125, 1225, 1301],
    1: [2, 4, 8, 11, 13, 15, 25, 27, 29, 30, 33, 36, 37, 40, 42, 43, 44, 47, 49, 51, 52, 54, 56, 57, 58, 59, 60, 62,
           63, 66, 67, 69, 71, 75, 84, 88, 91, 95, 96, 97, 98, 100, 101, 105, 107, 109, 111, 112, 113, 115, 116, 121,
           124, 126, 127, 128, 129, 130, 133, 134, 136, 138, 139, 142, 143, 144, 145, 146, 148, 149, 150, 155, 166, 167,
           168, 169, 171, 174, 175, 177, 178, 179, 180, 182, 186, 187, 188, 189, 192, 194, 196, 202, 203, 204, 205, 209,
           211, 213, 214, 215, 216, 217, 218, 221, 224, 225, 227, 229, 236, 237, 238, 241, 242, 243, 245, 246, 247, 248,
           252, 253, 258, 259, 260, 261, 262, 264, 265, 268, 269, 270, 272, 274, 275, 276, 278, 281, 282, 283, 284, 285,
           287, 288, 290, 292, 293, 296, 298, 299, 300, 302, 303, 304, 305, 306, 309, 310, 312, 313, 319, 320, 329, 338,
           339, 342, 344, 348, 351, 352, 354, 356, 360, 365, 366, 368, 372, 377, 378, 379, 382, 387, 389, 390, 392, 393,
           394, 397, 398, 400, 405, 406, 407, 408, 410, 412, 413, 415, 416, 417, 421, 422, 424, 426, 429, 430, 432, 433,
           434, 438, 439, 440, 441, 442, 443, 445, 446, 448, 450, 452, 454, 455, 458, 463, 468, 470, 473, 477, 479, 481,
           483, 485, 486, 493, 498, 500, 501, 504, 505, 508, 510, 512, 514, 519, 522, 523, 527, 528, 531, 532, 536, 537,
           539, 541, 543, 544, 547, 548, 550, 552, 553, 554, 555, 557, 562, 563, 571, 573, 577, 578, 583, 585, 589, 592,
           593, 594, 595, 600, 602, 605, 606, 608, 611, 612, 614, 617, 618, 619, 620, 622, 624, 628, 629, 630, 635, 636,
           637, 638, 644, 645, 647, 648, 649, 657, 658, 661, 662, 665, 669, 672, 673, 675, 676, 677, 679, 681, 682, 684,
           685, 686, 688, 692, 696, 699, 700, 703, 704, 705, 709, 711, 712, 714, 715, 716, 719, 720, 724, 726, 728, 731,
           734, 735, 737, 738, 740, 742, 743, 749, 753, 754, 757, 758, 759, 760, 761, 765, 767, 768, 771, 772, 774, 779,
           781, 784, 786, 788, 790, 792, 793, 795, 796, 797, 798, 800, 802, 803, 806, 807, 808, 810, 813, 814, 815, 817,
           821, 822, 823, 824, 826, 828, 829, 830, 832, 834, 835, 836, 838, 842, 844, 845, 846, 847, 848, 852, 854, 855,
           856, 857, 858, 859, 862, 864, 869, 871, 873, 875, 877, 878, 879, 884, 885, 887, 888, 889, 890, 891, 893, 894,
           895, 900, 910, 911, 912, 917, 918, 920, 921, 922, 924, 925, 927, 928, 931, 934, 935, 936, 937, 938, 939, 940,
           945, 947, 948, 952, 953, 954, 955, 957, 958, 962, 964, 967, 968, 969, 971, 973, 974, 976, 977, 978, 981, 983,
           986, 990, 992, 993, 996, 997, 998, 999, 1000, 1001, 1003, 1004, 1005, 1008, 1013, 1014, 1016, 1017, 1024,
           1025, 1026, 1027, 1028, 1029, 1031, 1033, 1034, 1035, 1036, 1038, 1040, 1043, 1044, 1046, 1047, 1050, 1052,
           1054, 1058, 1059, 1063, 1065, 1066, 1069, 1070, 1071, 1072, 1073, 1076, 1078, 1079, 1080, 1084, 1086, 1088,
           1090, 1091, 1092, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1103, 1104, 1105, 1108, 1109, 1113, 1116,
           1117, 1118, 1123, 1124, 1126, 1128, 1133, 1135, 1137, 1140, 1141, 1144, 1146, 1150, 1151, 1154, 1156, 1157,
           1158, 1161, 1164, 1166, 1169, 1170, 1172, 1173, 1174, 1175, 1178, 1179, 1181, 1182, 1183, 1184, 1185, 1186,
           1188, 1189, 1190, 1191, 1197, 1199, 1200, 1202, 1204, 1208, 1209, 1215, 1218, 1220, 1221, 1222, 1224, 1226,
           1228, 1232, 1234, 1235, 1237, 1239, 1244, 1245, 1247, 1248, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1261,
           1262, 1263, 1265, 1266, 1270, 1271, 1274, 1279, 1286, 1288, 1289, 1291, 1303, 1304, 1305, 1306, 1307, 1308,
           1310, 1312, 1314, 1315, 1321, 1323, 1325, 1332, 1334, 1336, 1337, 1341, 1342, 1344, 1346, 1348, 1349, 1350,
           1352, 1353, 1354, 1355, 1357, 1359, 1360, 1365, 1366, 1367, 1368, 14, 16, 87, 99, 184, 228, 256, 324, 349,
           370, 425, 551, 560, 564, 580, 616, 706, 746, 881, 882, 929, 966, 972, 1195, 1229, 1236, 1277, 308],
    2: [65, 110, 164, 207, 239, 656, 736, 819, 833, 867, 876, 995, 1089, 1201, 1217, 1242, 1230]


    # 可继续添加完整社区成员列表……
}

for nodes in community_dict.values():
    for n in nodes:
        if n not in G:
            G.add_node(n)

# 4. 构建节点到社区的映射
node_community = {node: comm_id for comm_id, nodes in community_dict.items() for node in nodes}

# 5. 准备着色映射：为每个社区分配颜色
num_comms = len(community_dict)
color_map = plt.cm.get_cmap('Set3', num_comms)
node_colors = [color_map(node_community.get(node, -1)) if node in node_community else (0.5, 0.5, 0.5, 1) for node in G.nodes()]

# 6. 生成布局并自动校正飞出去的节点

# 生成初始布局
pos = nx.spring_layout(G, seed=42, k=0.2, iterations=100)

# 自动检测和拉回飞出去的节点
threshold = 0.3  # 位置坐标阈值，可调整
center_x, center_y = np.mean(list(zip(*pos.values())), axis=1)

for node, (x, y) in pos.items():
    if abs(x) > threshold or abs(y) > threshold:
        print(f"节点 {node} 偏离过远，原始坐标为 ({x:.2f}, {y:.2f})，已重置。")
        # 将节点拉回中心附近，略微偏移避免重叠
        pos[node] = (center_x + np.random.uniform(-0.1, 0.1), center_y + np.random.uniform(-0.1, 0.1))

# 7. 绘制图形
plt.figure(figsize=(10, 10))
nx.draw_networkx_nodes(G, pos,
                       node_color=node_colors,
                       node_size=80,
                       linewidths=0.5,
                       edgecolors='black')

nx.draw_networkx_edges(G, pos,
                       edge_color=(0.85, 0.85, 0.85, 0.15),
                       width=0.5)

nx.draw_networkx_labels(G, pos,
                        font_size=4.5,
                        font_color='black')

# 8. 添加图例
for comm_id in community_dict:
    plt.scatter([], [], c=[color_map(comm_id)], label=f'Community {comm_id}', s=50)
plt.legend(scatterpoints=1, fontsize=10, loc='upper right')

plt.title("Community Visualization", fontsize=16)
plt.axis('off')
plt.tight_layout()

# 9. 保存或展示
plt.savefig(r'C:/Users/Administrator/Desktop/pythonProject3/community_viz.png', dpi=300)
plt.show()


